<?php 

/*
 * @file
 *
 */
 // permissions dynamique
define('PLUME_EXTRANET_ROLE', 'extranet member');
define('PLUME_ADMIN_SITE_ROLE', 'admin site member');
define('PLUME_ADMIN_TECH_ROLE', 'admin technique');
//ID accès realm extranet
define('NODE_ACCESS_EXTRANET', 10);

/**
 * Implements hook_init().
 */
function plume_privacy_extranet_init() {

//désactiver les permission de base des types de contenu
 variable_set('node_permission_article_extranet',0);
 variable_set('node_permission_page_extranet',0);
 variable_set('node_permission_ressource',0);

}
/**
 * Implements hook_perm().
 */
function plume_privacy_extranet_permission() {
  return array(
    PLUME_EXTRANET_ROLE => array(
      'title' => t('extranet member'),
      'description' => t('Can view extranet doc'),
    ),
     PLUME_ADMIN_SITE_ROLE => array(
      'title' => t('admin site member'),
      'description' => t('Can view/create/update/delete all node type'),
    ),
      PLUME_ADMIN_TECH_ROLE => array(
      'title' => t('admin technique'),
      'description' => t('Can view/create/update/delete all node type'),
    ),
  );
}

/**
 * Implements hook_node_access().
 */
function plume_privacy_extranet_node_access($node, $op, $account) {


	if (!empty($node) && isset($node))
	{
		//acces autirisé pour les admin site/tech
		if ($op == 'create' && 
				user_access(PLUME_ADMIN_SITE_ROLE, $account) ||
				user_access(PLUME_ADMIN_TECH_ROLE, $account)) {

				return NODE_ACCESS_ALLOW;
		}
		else if ($op == 'update' && 
				user_access(PLUME_ADMIN_SITE_ROLE, $account)||
				user_access(PLUME_ADMIN_TECH_ROLE, $account)) {

				return NODE_ACCESS_ALLOW;
		}
		else if ($op == 'delete' && 
				user_access(PLUME_ADMIN_SITE_ROLE, $account)||
				user_access(PLUME_ADMIN_TECH_ROLE, $account)) {

				return NODE_ACCESS_ALLOW;
		}

		//acces limité aux non-membre
		if ($node->type == "article_extranet" || 
			$node->type == "page_extranet" || 
			$node->type == "ressource"&& 
			user_access(PLUME_EXTRANET_ROLE, $account))
		{
			return NODE_ACCESS_DENY;
		}
	}
}

/*
 * Implements hook_node_access_records().
 */
function plume_custom_node_access_records($node) {

// déterminer les node spécifiques à bloquer
// ne pas oublier de reconstruire les droits d'acces : /admin/reports/status/rebuild
	if ($node->type == "article_extranet" ||
		$node->type == "page_extranet" || 
		$node->type == "ressource")
	{
		$grants[] = array( 
			'realm' => 'node_access_extranet',
			'gid' => NODE_ACCESS_EXTRANET,
			'grant_view' => 1,
			'grant_update' => 0,
			'grant_delete' => 0,
			'priority' => 0,
			);
	}
	return $grants;
}

/*
 * Implements hook_node_grants().
 */
function plume_custom_node_grants($account, $op) {

	$grants = array();

  // si l'utilisateur possède la permission, "extranet member"
	if ($op == 'view' && 
  		user_access(PLUME_EXTRANET_ROLE, $account) ||
  		user_access(PLUME_ADMIN_SITE_ROLE, $account) ||
  		user_access(PLUME_ADMIN_TECH_ROLE, $account)) {

  			drupal_set_message("user has the permission! ");
    		$grants['node_access_extranet'] = array(NODE_ACCESS_EXTRANET);
  	}
  	else {
			drupal_set_message("user does not have the permission! ");
  	}
  return $grants;
}
